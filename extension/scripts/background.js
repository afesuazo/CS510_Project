// search recommendations generated by liked comments, allways display
let likedRecommendations = [];
// search recommendations generated by comments
let otherRecommendations = [];

// This sets up a listener in the background
// When a message of type "comments" is received, it sends the comments to the backend
chrome.runtime.onMessage.addListener((message, sender, sendResponse) => {
    if (message.type === "likedComments") {
        sendCommentsToBackend(message.data, likedRecommendations).then(() => {
            // Store the recommendations in local storage
            // The extension popup will read from local storage and display the recommendations as links
            likedRecommendations = likedRecommendations.flat(1).filter(Boolean);
            const recommendations = new Set([...likedRecommendations, ...otherRecommendations])
            chrome.storage.local.set({ searchRecommendations: [...recommendations] });
        })
    } else {
        sendCommentsToBackend(message.data, otherRecommendations).then(() => {
            // Store the recommendations in local storage
            // The extension popup will read from local storage and display the recommendations as links
            otherRecommendations = otherRecommendations.flat(1).filter(Boolean);
            const recommendations = new Set([...likedRecommendations, ...otherRecommendations])
            chrome.storage.local.set({ searchRecommendations: [...recommendations] });
        })
    }
});

function sendCommentsToBackend(comments, recommendations) {
    console.log("Sending comments to the backend");
    recommendations.length = 0;
    return Promise.all(comments.map((comment, index) => {
        // Send a post request to the backend with the comments
        return fetch('http://localhost:8000/extract', {
            method: 'POST',
            mode: "cors",
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ text: comment })
        })
            .then(response => response.json())
            .then(data => {
                console.log('Recommendation: ', data);
                recommendations[index] = data;
            })
            .catch(error => console.error('Error:', error));
    }))
}